generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  password    String
  name        String?
  role        Role     @default(USER)
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Int
  category    Category
  material    String?
  condition   String?
  brand       String?
  color       String?
  metal       String?
  images      String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Category {
  RINGS
  NECKLACES
  BRACELETS
  EARRINGS
  WATCHES
}

model Order {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  products    Product[] @relation(references: [id])
  totalAmount Int
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Category {
  RINGS
  NECKLACES
  BRACELETS
  EARRINGS
  WATCHES
}

model Order {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  products    Product[] @relation(references: [id])
  totalAmount Int
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SalesHistory {
  id          String   @id @default(uuid())
  product     Product  @relation(fields: [productId], references: [id])
  productId   String
  soldPrice   Int
  soldDate    DateTime @default(now())
}

model CustomerProfile {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  address     String?
  phoneNumber String?
  subscriptionStatus String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model AdminSettings {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  settingName String
  settingValue String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
